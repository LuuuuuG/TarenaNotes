/**************************************************************************/
*									   *		
*				day_11					   *	
*									   *
/**************************************************************************/

	
	一、字符串函数
	二、指针数组
	三、主函数参数
	


			/*一、字符串函数*/
	1、C语言中不可以使用操作符操作字符串，应该使用一组标准函数。
	2、为了使用这些标准函数，需要包含/* string.h 头文件 */。

	3、strlen	统计字符串里有效字符的个数(\0 前面的字符)。
			和sizeof关键字不同。

	4、strcat	合并两个字符串。有可能修改不属于数组的存储区，
			这会造成严重后果。

	   strncat	功能和strcat类似，但是可以避免修改不属于数组的存储区。
					
	5、strcmp	用来比较两个字符串的大小。	
				返回值是1表示前一个字符串大，
				返回值是-1表示后一个字符串大，
				返回值是0表示一样大。

	   strncmp	比较两个字符串的前n个字符。

	6、strcpy	把字符串复制到字符数组里。
			这个函数也可能修改不属于数组的存储区，这可能导致严重错误。


	   strncpy	可以只拷贝字符串里的前n个字符。
	
	7、memset	可以把字符数组里前n个存储区都设置成同一个字符。

	8、strstr	在一个大字符串里查找某个小字符串的位置。
			如果没有找到则返回NULL
	


****************

//字符串函数演示
#include<stdio.h>
#include<string.h>
int main(){
    char str[10] = "xyz";
    int len = strlen(str);      //strlen 统计有效字符个数
    printf("lenth is %d\n",len);
    printf("sizeof(str) is %d\n",sizeof(str));//sizeof统计数组所有字符个数

    printf("%s\n",strcat(str,"abc"));   //前一个参数必须是字符串数组。
    printf("%s\n",str);         //效果与上相同。

    printf("比较结果是%d\n",strcmp("abc","abd"));

    printf("%s\n",strcpy(str,"123456")); //字符串复制到字符数组里
    printf("%s\n",str);     //效果同上 ，与用字符串初始化数组效果相同。

    memset(str,'h',10);     //设置数组为10个 h
    printf("%s\n",str);

    printf("%s\n",strstr("abcdefghijklmn","def"));  //效果从def一直打印到末尾

    return 0;

}

**********************
运行结果：
lenth is 3
sizeof(str) is 10
xyzabc
xyzabc
比较结果是-1
123456
123456
hhhhhhhhhh
defghijklmn

**********************



	其他字符串相关函数(不需要string.h头文件)

	1、sprintf		按格式把多个数字打印到字符数组里形成字符串。

	2、sscanf		按格式从字符串里得到多个数字并记录到存储区里。


***************
#include<stdio.h>

int main(){
    char str[20] = {0};
    printf("%d %g %c\n",34,5.4f,'u');
    
    sprintf(str,"%d %g %c\n",34,5.4f,'u');  //将三个数字形成字符串打印到数组里
    printf("%s\n",str);     //两行效果同上面一行

    int num = 0;
    float fnum = 0.0f;
    char ch = 0;
    sscanf("5.4 p 67","%g %c %d",&fnum,&ch,&num);
    printf("%c %d %g\n",ch,num,fnum);

    return 0;
}

*********************
运行结果：
34 5.4 u
34 5.4 u

p 67 5.4
*********************


	
	以下俩函数可以把字符串里的数字转换成数字类型。
	为了使用它们，需要包含stdlib.h头文件。

	atoi		可以把字符串里的整数转换成整数类型。

	atof		可以把字符串里的浮点数转换成双精度浮点类型	

*****************
#include<stdio.h>
#include<stdlib.h>

int main(){
    int num = atoi("34adsgsd");
    printf("num is %d\n",num);
    
    double dnum = atof("23.67dsgj");
    printf("dnum is %lg\n",dnum);
    return 0;
}
******************
运行结果：
num is 34
dnum is 23.67
******************




【练习】

编写程序从键盘的到5个考试成绩，把他们按照如下格式拼凑成一个字符串

	67，98，34，76，93

【Gang】

#include<stdio.h>

int main(){
    char str[5] = {0};
    int a,b,c,d,e;
    printf("plz input five scores:");
    scanf("%d%d%d%d%d",&a,&b,&c,&d,&e);
    sprintf(str,"%d,%d,%d,%d,%d",a,b,c,d,e);
    printf("%s\n",str);

    return 0;
}


//Mr.Yang
#include<stdio.h>
#include<string.h>
int main(){
    char tmp[10] = {0},grades[30] = {0};
    int num = 0,grade = 0;
    for (num = 1;num <= 5;num++){
        printf("plz input a grade:");
        scanf("%d",&grade);
        sprintf(tmp,"%d,",grade);   //将输入的一个成绩打印入tmp数组中
        strcat(grades,tmp);         //将tmp中的字符合并入grade数组中
    }   
    grades[strlen(grades) - 1] = 0;// 将最后一个逗号赋值为0
    printf("%s\n",grades);
    return 0;
}




************************************************
			/*获得字符串fgets*/

	1、fgets函数可以从键盘得到一个字符串并记录到一个数组里。
		这个函数可以避免出现scanf函数的问题(不能录入空格等)

	2、这个函数需要三个参数：
		a.数组名称
		b.数组里的存储区个数。
		c.用stdin表示键盘
	    [e.g.] fgets(str,10,stdin);
	
	3、如果用户输入的内容不足以充满数组，
	   计算机把用户最后输入的回车字符也记录到数组里。
	4、如果输入内容超过数组容量就把后面的内容留在输入缓冲区里等待下次读取。
	5、每次使用万fgets函数后都需要清理输入缓冲区里可能存在的多余数据。
		并且只有确保有多余数据的时候才应该清理。
*****************

//获得字符串演示

#include<stdio.h>
#include<string.h>
int main(){
    char str[10] = {0}; 
    printf("plz input a string:");
//  scanf("%s",str);
    
    fgets(str,10,stdin);
    if(strlen(str) == 9 && str[8] != '\n'){ //确保有多余数据的时候，才清理
        scanf("%*[^\n]");    
        scanf("%*c");
    }   
    printf("%s\n",str);
    
    printf("plz input another string:");
    fgets(str,10,stdin);
    printf("%s\n",str);
    return 0;
}

***************


【练习】
编写模拟登陆程序：
	给用户三次机会，每次要求输入用户名和密码。
	如果三次都失败就提示登陆失败，否则提示登陆成功。
	正确的用户名是admin	正确的密码是123456

//模拟登陆程序、
#include<stdio.h>
#include<string.h>
int main(){
    char usr[10] = {0},pw[10] = {0};
    int i = 0;
    for(i = 1;i <= 3;i++){
            printf("plz input user name:");
            fgets(usr,10,stdin);
            if(strlen(usr) == 9 && usr[8] != '\n'){//clean 
                scanf("%*[^\n]");
                scanf("%*c");
            }   
            if(strcmp(usr,"admin\n")){   
                continue;
            }   

            printf("plz input passward:");
            fgets(pw,10,stdin);
            if(strlen(pw) == 9 && pw[8] != '\n'){//clean 
                scanf("%*[^\n]");
                scanf("%*c");
            }   
            if(strcmp(pw,"123456\n")){   
                continue;
            }   
            break;
    }   
    if(i <= 3){ //异常结束 登陆成功
        printf("succed login\n");
    }   
    else{   //正常结束 登陆失败
        printf("fail to login\n");
    }   

    return 0;
}



*****************************************
		
			
			/*二、字符指针数组*/
	1、指针数组中每个存储区是一个指针类型存储区。
	2、字符指针数组里包含多个字符类型指针，每个指针可以用来代表一个字符串。
	3、字符指针数组就可以用来代表多个相关字符串。

//字符指针数组演示

#include<stdio.h>

int main(){
    char *strs[5] = {"abc","def","hij","klm","xyz"};
    int num = 0;
    for(num = 0;num <= 4;num++){
        printf("%s\n",strs[num]);
    }   
    return 0;
}


*********************************************

			/*三、主函数参数*/

	1、主函数的第二个参数就是一个字符指针数组。
	    int main(int argc,char *argv[])	
	2、第一个参数表示第二个参数里有多少个指针


//主函数参数演示
#include<stdio.h>
int main(int argc,char *argv[]){ // 1整数，2字符指针数组
	//第一个参数表示第二个参数里有多少个指针
	int num = 0;
	for(num = 0;num <= argc - 1;num++){
		printf("%s\n",argv[num]);

	}
	return 0;
}








预习：
	1、宏
	2、条件编译
	3、多文件编程

作业：
	1、把一个字符串里的考试成绩拆出来，
	 计算并打印其和。


【Gang】
#include <stdio.h>
#include <string.h>
int main(){
    int a,b,c,d,e,sum;
    sscanf("50,60,70,80,90","%d,%d,%d,%d,%d",&a,&b,&c,&d,&e);
    sum = a + b + c + d + e;

    printf("sum = %d\n",sum);
    return 0;
}


//Mr.Yang
#include <stdio.h>
#include <string.h>						
int main(){
    int sum = 0;
    char grades[] = "10,20,30,40,50,60";
    char *p_grade = grades;
    while(1){   //死循环
        sum += atoi(p_grade);
        p_grade = strstr(p_grade,","); //在字符串指针数组中找到逗号
        if(!p_grade){   //处理没找到逗号的情况
            break;
        }   
        p_grade++;
    }   
    printf("sum = %d\n",sum);
    return 0;
}






