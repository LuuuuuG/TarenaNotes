/**************************************************************************/
*									   *		
*				day_07					   *	
*									   *
/**************************************************************************/	

	  生成彩票
	  验证身份证
	一、变长数组
	二、多维数组
	
	
	
	
【练习】
  1 /*
  2 编写程序产生一张彩票，彩票里包含7个1~36之间的随机数（数字可以重复）
  3  首先得到一张彩票，然后把彩票里的数字打印在屏幕上。
  4 */
  5 #include<stdio.h>
  6 #include<stdlib.h>
  7 #include<time.h>
  8 
  9 int main(){
 10     srand(time(0));
 11     int arr[] = {0};
 12     int i = 0,j = 0;
 13     for(i = 1;i <=7;i++){
 14         arr[i] = rand() % 36 +1;
 15         printf("%d ",arr[i]);
 16     }
 17 	return 0；
 18 }

/*		\有重复数字/				*/





/*		/无重复数字\				*/


 #include<stdio.h>
  6 #include<stdlib.h>
  7 #include<time.h>
  8 
  9 int main(){
 10     srand(time(0));
 11     int arr[7] = {0};
 12     int tmp = 0,num = 0;
 13     int i = 0,cnt = 0;
 14 /*  for(i = 1;i <=7;i++){				             <重点复习>
 15         arr[i] = rand() % 36 +1;
 16     }
 17 */
 18     do{
 19         tmp = rand() % 36 +1;
 20         for(num = 0;num <= cnt - 1;num++){
 21             if(arr[num] == tmp){    //生成数字跟前面数字已有一样
 22                 break;              //结束循环
 23             }
 24         }
 25         if (num == cnt){            //循环如果正常结束
 26             arr[cnt] = tmp;         //说明生成数字可以使用~
 27             cnt++;
 28         }
 29     }while(cnt <7);
 30     for(i = 0;i < 7;i++){
 31         printf("%d ",arr[i]);
 32     }
 33     printf("\n");
 34 
 35     return 0;
 36 }











【练习】
  1 /*
  2 身份证前17个号码和下面17个数字对应相乘
  3 (7，9，10，5，8，4，2，1，6，3，7，9，10，5，8，4，2)
  4 
  5 把所有乘积求和，用求和结果除11取余，用余数到下面11个数字里挑选
  6 (1,0,x,9,8,7,6,5,4,3,2)
  7 挑选的结果就是第18位的数字
  8 
  9 */
 10 #include<stdio.h>
 11 
 12 int main(){
 13     int arr[17] = {7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2};
 14     int i = 0,num = 0,sum = 0,last_num = 0;
 15     for(i = 0;i < 17;i++){
 16         printf("输入你身份证的第%d位：",i);
 17         scanf("%d",&num);
 18         sum = sum + arr[i] * num;
 19     }
 20 
 21         last_num = sum % 11;
 22     int arr2[11] = {1,0,999,9,8,7,6,5,4,3,2};
 23         if( arr2[last_num] == 2){
 24             printf("最后一位是x\n");
 25         }
 26         else{
 27             printf("最后一位是%d\n",arr2[last_num]);   
 28         }
 29         
 30     return 0;
 31 }

//Mr.Yang

4 int main(){
 35     int card[17] = {0},arr[17] = {7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2};
 36     char arr1[11] = {'1','0','x','9','8','7','6','5','4','3','2'};
 37     int num = 0,sum = 0;
 38     for (num = 0;num <= 16;num++){
 39          printf("输入你身份证的第%d位：",num+1);
 40          scanf("%d",&card[num]);
 41     }
 42     for (num = 0;num <= 16;num++){
 43         sum += card[num] * arr[num];
 44     }
 45         printf("最后一位是%c\n",arr1[sum % 11]);
 46 
 47     return 0;
 48 }
        

【练习】       //                                               <   重点复习  >

  1 /*
  2 编写程序 从键盘得到一个非负整数
  3 ，统计出它里面包含的所有数出现的次数
  4 */

//Mr.Yang
 48 int main(){
 49     int arr[10] = {0},num = 0;
 50     printf("请输入一个数字：");
 51     scanf("%d",&num);
 52     do{
 53         arr[num %10]++;
 54         num /= 10;      //丢掉最右边的数
 55     }while(num);
 56 
 57     for(num = 0;num <= 9;num++){
 58         if(arr[num]){
 59             printf("数字%d出现的次数是%d\n",num,arr[num]);
 60         }
 61     }
 62     return 0;
 63 }



*******************************************************


			/*一、变长数组*/
	1、数组名称不可以代表存储区。
	2、数组名称代表的是数组里第一个存储区的地址。
	3、可以对数组名称做sizeof计算，计算结果是数组里所有存储区的总大小
	4、c99规范里允许使用边长数组，声明边长数组时可以使用变量表示数组里
		包含的存储区个数。
	5、如果多次运行这个程序则这个数组里包含的存储区个数可能变化。
		每次程序运行过程中数组里包含的存储区个数不会改变。
	6、变长数组/*不可以初始化。*/



//  数组地址演示
  1 #include<stdio.h>
  2 
  3 int main(){
  4     int arr[5] = {0};
  5     printf("arr is %p\n&arr[0] is %p\n",arr,&arr[0]);
	printf("sizeof(arr)is %d\n",sizeof(arr));

  6     return 0;
  7 }
********************
运行结果：
arr is 0xbf82a6fc
&arr[0] is 0xbf82a6fc
sizeof(arr)is 20



//变长数组演示
  1 #include<stdio.h>
  2 
  3 int main(){
  4     int size = 0;
  5     printf("请输入存储区个数：");
  6     scanf("%d",&size);
  7     int arr[size];  //变长数组声明。
  8     printf("sizeof(arr) is %d\n",sizeof(arr));
  9     return 0;
 10 }


【练习】
编写程序产生一张彩票，彩票里的数字个数由用户指定。






********************************************************



			/*二、多维数组*/
	1、多维数组除了可以表示存储区以外，还可以表示存储区的分组情况。
	2、二维数组是最常见的多维数组，它只能表示存储区的一次存储情况。
	3、声明二维数组时需要提供两个整数，
		前一个表示分组个数，后一个表示分组里的存储区个数。
	4、使用二维数组时也需要提供两个下标，
		a.组下标	表示分组	范围从0开始到分组个数减一为止。
		b.组内下标	表示分组内的存储区	范围从0开始到存储区个数减一为止。

	5、可以采用双重循环依次处理二维数组里的每个存储区。
	6、可以把二维数组当作一维数组进行初始化。
		int arr[3][2] = {1,2,3,4,5,6};
	7、也可以把初始化数据进行分组，每组初始化数据用来初始化一组存储区。
		int arr[3][2] = {{1,2},{3,4},{5,6}};
	8、如果可以根据初始化数据计算出分组个数就可以省略数组声明里的分组个数。
		int arr[][2] = {1,2,3,4,5};
		int arr[][2] = {{1},{3,4},{5,6}};
	9、二维数组名称只能代表其中第一个存储区的地址。
	10、数组名称也不可以被赋值。
	11、二维数组名称也可以做sizeof计算，结果是二维数组里所有存储区的总大小。
	12、二维数组名称在使用的时候也可以只提供一个下标，这个下标作为组下标使用。
		这个写法代表下标对应组里第一个存储区的地址。
			arr[1] 的 %p 与 arr[1][0] %p 相同


************************************************************************


//数组演示
  1 #include<stdio.h>
  2 int main(){
  3     int arr[3][2];  //二维数组声明
  4     int row = 0,col = 0;
  5     int num = 1;
  6     for(row = 0;row <= 2;row++){
  7         for(col = 0;col <= 1;col++){
  8             arr[row][col] = num;
  9             num++;
 10             printf("arr[%d][%d] = %d      ",row,col,arr[row][col]);
 11         }
 12         printf("\n");
 13     }
 14     return 0;
 15 }
*********************************
运行结果：
arr[0][0] = 1      arr[0][1] = 2      
arr[1][0] = 3      arr[1][1] = 4      
arr[2][0] = 5      arr[2][1] = 6 


//二维数组演示
  1 #include<stdio.h>
  2 int main(){
  3     int arr[3][2] = {0};
  4     printf("arr is %p\n&arr[0][0]is %p\n",arr,&arr[0][0]);
  5     printf("sizeof(arr) is %d\n",sizeof(arr));
  6     printf("arr[1] is %p\n&arr[1][0]is %p\n",arr[1],&arr[1][0]);
  7     printf("sizeof(arr[1]) is %d\n",sizeof(arr[1]));
  8     return 0;
  9 }
~      
***************************************
运行结果：
arr is 0xbfde1898
&arr[0][0]is 0xbfde1898
sizeof(arr) is 24
arr[1] is 0xbfde18a0
&arr[1][0]is 0xbfde18a0
sizeof(arr[1]) is 8


*****************************************************************



编写程序 二维数组 5 * 5 
填入 
10000
02000
00300
00040
00005
把以上数字填充到二维数组中然后此格式打印


【Gang】
  1 #include <stdio.h>
  2 int main(){
  3     int arr[5][5];
  4     int i = 0,j = 0;
  5     for(i = 0;i < 5;i++){
  6         for(j = 0;j < 5;j++){
  7             if(i == j){
  8                 arr[i][j] = j + 1;
  9                 printf("%d",arr[i][j]);
 10             }
 11             else{
 12                 arr[i][j] = 0;
 13                 printf("%d",arr[i][j]);
 14             }
 15         }	`
 16         printf("\n");
 17     }
 18 
 19     return 0;
 20 }


//Mr.Yang

 24 int main(){
 25 
 26     int arr[5][5] = {0};
 27     int i = 0,j = 0;
 28     for(i = 0;i < 5;i++){
 29         for(j = 0;j < 5;j++){
 30             if(i == j){
 31                 arr[i][j] = j + 1;
 32             }
 33         }
 34     }
 35     for(i = 0;i < 5;i++){
 36         for(j = 0;j < 5;j++){
 37             printf("%d",arr[i][j]);
 38             }
 39             printf("\n");
 40         }
 41 
 42     return 0;
 43 }











****************************************************************
预习：
	1、函数





















