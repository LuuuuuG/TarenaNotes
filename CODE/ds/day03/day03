/**************************************************************************/
*									   *		
*				day_03					   *	
*									   *
/**************************************************************************/


作业：






		
			/*队列*/
	1.队列(Queue)
	1.1 基本概念
		队列就是具有先进先出特性的数据结构,简称FIFO
					(First In First Out)
	
		
		————————————————————	
	  back————>		 ——————>front
		————————————————————

		队列是一种可以在两端进行增删操作的数据结构，
		其中插入元素的端点叫做后端，也就是队尾；
		其中删除元素的端点叫做前端，也就是队首/队头。
	
		队列属于逻辑接哦股中的线性结构；

	1.2 基本操作
	
		创建			queue_create
		销毁			queue_destroy
		判断队列是否空			queue_empty
		判断队列是否满			queue_full
		入队			queue_push
		遍历			queue_travel
		计算有效元素个数	queue_size
		查看队列中队首元素	queue_front
		查看队列中队尾元素、 	queue_back
		出队			queue_pop
		清空队列中所有元素	queue_clear



	1.3 使用顺序结构实现队列的基本操作
	
			       77  66 			
		——————————————————————
    int arr[];  | 55| 44| 33| 22| 11 |   
		——————————————————————
		  4   3   2   1    0
	
	思路：
		int arr[];
		int front;
		int cnt;
		当队列放满时：front = 0;cnt = 5;
		此时进行第一次出队：
		arr[front % 5] = arr[0] = 11;
		front++;  //front = 1;
		cnt--;    //cnt = 4;
		此时插入元素 66 时:
		arr[(front+cnt) % 5] = arr[0] = 66;
		cnt++; //cnt = 5

		第二次
		arr[front % 5] = arr[1] = 22;
		front++;  //front = 2;
		cnt--;    //cnt = 4;
		此时插入元素 77 时:
		arr[(front+cnt) % 5] = arr[1] = 77;
		cnt++; //cnt = 5



	/* CODE */
	



	1.4 使用链式结构实现队列的基本操作









	1.5 实际应用
		可以用于打印机打印任务的控制、银行取号系统等；



*********************************************
作业：
	将01queue_arr.c 03queue_list.c分别拆分为三个文件
	各自放在独立的目录中，编写Makefile文件进行编译链接。

预习：
	1、链表
	2、二叉树







